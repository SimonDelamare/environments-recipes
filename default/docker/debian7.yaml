#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Debian base image for docker built with docker.
#
#==============================================================================
---
extend: ../base/debian.yaml
# Enables qcow2 checkpoint
# checkpoint: docker.yaml
#== Global variables use by Kameleon engine and the steps
global:
  ## Docker options
  docker_dns: 208.67.222.222
  docker_image: $$kameleon_recipe_name
  docker_hostname: $$kameleon_recipe_name

  # rootfs options
  rootfs: $$kameleon_cwd/rootfs

  # Shell session from where we launch exec_out commands. There is often a
  # local bash session, but it can be a remote shell on other machines or on
  # any shell. (eg. bash, chroot, fakechroot, ssh, tmux, lxc...)
  out_context:
    cmd: bash
    workdir: $$kameleon_cwd
    proxy_cache: localhost

  # Shell session that allows us to connect to the building machine in order to
  # configure it and setup additional programs
  ssh_config_file: $$kameleon_cwd/ssh_config
  in_context:
    cmd: LC_ALL=POSIX ssh -F $$ssh_config_file $$kameleon_recipe_name -t /bin/bash
    workdir: /root/kameleon_workdir
    proxy_cache: 172.17.42.1

  bootstrap_packages: >
    ifupdown locales libui-dialog-perl dialog isc-dhcp-client netbase
    net-tools iproute acpid openssh-server pciutils extlinux
    linux-image-$$arch

#== Bootstrap the new system and create the 'in_context'
bootstrap:
  - "@base"
  - prepare_docker
  - start_docker


#== Install and configuration steps
# WARNING: this part should be independante from the out context (whenever
# possible...)
setup:
  - "@base"

#== Export the generated appliance in the format of your choice
export:
  - save_docker_appliance:
    - commit:
      - exec_out: docker commit $(cat MAIN_CONTAINER_ID) $$kameleon_recipe_name:latest
